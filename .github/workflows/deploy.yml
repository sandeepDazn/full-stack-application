name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Adjust the Node.js version as per your project requirements

    - name: Install Lerna (if required)
      # Uncomment and adjust version if needed (consider alternatives)
      # run: npm install -g lerna@6

    - name: Install dependencies (frontend)
      run: |
        cd packages/frontend
        yarn install --frozen-lockfile

    - name: Install dependencies (backend)
      run: |
        cd packages/backend
        yarn install --frozen-lockfile

    - name: Docker login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker images
      env:
        IMAGE_NAME_FRONTEND: your-dockerhub-username/your-frontend-image
        IMAGE_NAME_BACKEND: your-dockerhub-username/your-backend-image
      run: |
        docker build -t $IMAGE_NAME_FRONTEND:latest ./packages/frontend
        docker push $IMAGE_NAME_FRONTEND:latest
        docker build -t $IMAGE_NAME_BACKEND:latest ./packages/backend
        docker push $IMAGE_NAME_BACKEND:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform
